<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">
	
	<!-- 引入外部的属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<aop:aspectj-autoproxy/>
	<!-- 注解扫描 -->
	<context:component-scan base-package="com">
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
	</context:component-scan>
	<!-- 数据源 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">        
        <property name="driverClassName" value="${jdbc.driverClassName}"/>        
        <property name="url" value="${jdbc.url}"/>        
        <property name="username" value="${jdbc.username}"/>        
        <property name="password" value="${jdbc.password}"/>        
    </bean>
     <!-- 配置hibernate 相关属性--> 
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入连接池-->
		<property name="dataSource" ref="dataSource"></property>
		<!-- hibernate 的相关属性 -->
		<property name="hibernateProperties" >
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
                <prop key="hibernate.cache.use_second_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>   
                <prop key="current_session_context_class">thread</prop>    
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
			</props>
		</property>
		
		 <property name="packagesToScan">
			<list>
				<value>com.linda.blog.entity</value>
			</list>
		</property>
	</bean>	
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager= "transactionManager">
		<tx:attributes>
		   <tx:method name="get*" read-only="true" propagation= "REQUIRED"/>
		   <tx:method name="list*" read-only="true" propagation= "REQUIRED"/>
		   <tx:method name="find*" read-only="true" propagation= "REQUIRED"/>
		   <tx:method name="*" propagation= "REQUIRED" rollback-for= "Exception"/>
		</tx:attributes>
	</tx:advice>
	<!-- <aop:config proxy-target-class= "true">
		<aop:advisor pointcut= "execution(public * com.linda.*.service.*Service.*(..))" advice-ref="txAdvice"/>
	</aop:config> -->
	<aop:config>  
	    <aop:pointcut id="transactionPointcut" expression="execution(public * com.linda.*.service.*Service.*(..))" />      
	    <aop:advisor pointcut-ref="transactionPointcut" advice-ref="txAdvice" />  
    </aop:config>
	<!-- 开启事务注解 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"  /> -->
</beans>
